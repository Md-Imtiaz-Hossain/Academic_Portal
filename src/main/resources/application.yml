
spring:
  datasource:
    url: jdbc:postgresql://${PROD_DB_HOST}:${PROD_DB_PORT}/${PROD_DB_NAME}
    username: ${PROD_DB_USERNAME}
    password: ${PROD_DB_PASSWORD}
    name: railway

  sql:
    init:
      mode: always # you won't do this in prod, I'm just doing this for demo purposes
#
#
#      spring_profiles_active=prod
#      PROD_DB_HOST=HOST_HERE
#      PROD_DB_PORT=POST_HERE
#      PROD_DB_NAME=railway
#      PROD_DB_PASSWORD=PASSWORD_HERE
#      PROD_DB_USERNAME=postgres
#
#
#      DATABASE_URL - postgresql://${{ PGUSER }}:${{ PGPASSWORD }}@${{ PGHOST }}:${{ PGPORT }}/${{ PGDATABASE }}
#
#      PGDATABASE- railway
#
#      PGHOST- containers-us-west-146.railway.app
#
#      PGPASSWORD- gYNnGIWEj3aJk0mvVLwQ
#
#      PGPORT- 7967
#
#      PGUSER- postgres


#server:
#  port: 8080
#
#spring:
#  datasource:
#    name: borrowmybook
#    url: jdbc:postgresql://dpg-ceh1oota499apbk7f290-a.oregon-postgres.render.com/borrowmybook
#    # TODO: It's not secure to leave credentials in code, need to move to github secrets/vault
#    username: borrowmybook_user
#    password: jCcqAg2fpwAy9QaQf4ica78L9gntJHOc
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      # TODO: using "ddl-auto: none" is good practice. We will use Liquibase/FlyWay for db migration and versioning on UAT & PROD.
      ddl-auto: update

#      # To script-based schema creation and data population.
#    defer-datasource-initialization: true
#  sql:
#    init:
#      mode: never
#      data-locations: classpath:db/schema.sql
#
#logging:
#  level:
#    com.zaxxer.hikari: DEBUG # To check the log if the db connection has been established